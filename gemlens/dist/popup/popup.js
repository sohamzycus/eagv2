var v=Object.defineProperty;var x=(d,t,e)=>t in d?v(d,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):d[t]=e;var c=(d,t,e)=>x(d,typeof t!="symbol"?t+"":t,e);class E{constructor(){c(this,"currentTab",null);c(this,"statusIndicator");c(this,"statusText");c(this,"summaryContainer");c(this,"summaryContent");c(this,"historyContainer");c(this,"historyContent");this.statusIndicator=document.getElementById("statusIndicator"),this.statusText=document.getElementById("statusText"),this.summaryContainer=document.getElementById("summaryContainer"),this.summaryContent=document.getElementById("summaryContent"),this.historyContainer=document.getElementById("historyContainer"),this.historyContent=document.getElementById("historyContent"),this.init()}async init(){await this.getCurrentTab(),await this.checkApiKeyStatus(),this.setupEventListeners()}async getCurrentTab(){try{const[t]=await chrome.tabs.query({active:!0,currentWindow:!0});this.currentTab=t}catch(t){console.error("Failed to get current tab:",t)}}async checkApiKeyStatus(){try{const t=await chrome.runtime.sendMessage({action:"checkApiKey"});t!=null&&t.hasKey?(this.updateStatus("ready","Ready to summarize"),this.enableButtons(!0)):(this.updateStatus("warning","API key required"),this.enableButtons(!1))}catch{this.updateStatus("error","Extension error"),this.enableButtons(!1)}}updateStatus(t,e){const s=this.statusIndicator.querySelector(".status-dot");s.className=`status-dot ${t==="ready"?"":t}`,this.statusText.textContent=e}enableButtons(t){document.querySelectorAll(".action-btn").forEach(s=>{s.disabled=!t})}setupEventListeners(){var t,e,s,o,i,r,n,m,a;(t=document.getElementById("summarizeBtn"))==null||t.addEventListener("click",()=>{this.summarizePage()}),(e=document.getElementById("summarizeVideoBtn"))==null||e.addEventListener("click",()=>{this.summarizeVideo()}),(s=document.getElementById("askGeminiBtn"))==null||s.addEventListener("click",()=>{this.openGeminiChat()}),(o=document.getElementById("settingsBtn"))==null||o.addEventListener("click",()=>{chrome.runtime.openOptionsPage()}),(i=document.getElementById("closeSummary"))==null||i.addEventListener("click",()=>{this.closeSummary()}),(r=document.getElementById("copyBtn"))==null||r.addEventListener("click",()=>{this.copySummary()}),(n=document.getElementById("historyBtn"))==null||n.addEventListener("click",()=>{this.showHistory()}),(m=document.getElementById("closeHistory"))==null||m.addEventListener("click",()=>{this.closeHistory()}),(a=document.getElementById("saveBtn"))==null||a.addEventListener("click",()=>{this.saveSummary()})}async summarizePage(){var t,e;if((t=this.currentTab)!=null&&t.id)try{this.showLoading("Extracting page content...");const s=new Promise((m,a)=>{setTimeout(()=>a(new Error("Content extraction timed out after 10 seconds")),1e4)}),o=chrome.scripting.executeScript({target:{tabId:this.currentTab.id},func:()=>(()=>{const a=window.location.href,y=document.title;let u="";const g=["article","main",'[role="main"]',".content","#content",".post-content",".entry-content"];for(const l of g){const h=document.querySelector(l);if(h){u=h.textContent||h.innerText||"";break}}if(!u){const l=document.body.cloneNode(!0);["nav","header","footer","aside",".navigation",".nav",".menu",".sidebar",".footer",".header"].forEach(w=>{l.querySelectorAll(w).forEach(p=>p.remove())}),u=l.textContent||l.innerText||""}return u=u.replace(/\s+/g," ").trim(),{text:u,title:y,url:a,type:window.location.hostname.includes("youtube.com")?"video":"webpage"}})()}),[i]=await Promise.race([o,s]);if(!(i!=null&&i.result))throw new Error("Failed to extract page content");const r=i.result;if(console.log("Extracted content length:",r.text.length),console.log("Extracted content preview:",r.text.substring(0,200)+"..."),!r.text||r.text.length<50)throw new Error(`Not enough content extracted (${r.text.length} characters). Try refreshing the page.`);this.showLoading(`Generating summary... (${r.text.length} chars extracted)`);const n=await chrome.runtime.sendMessage({action:"summarizePage",text:r.text,url:r.url,title:r.title||((e=this.currentTab)==null?void 0:e.title)||"Untitled Page",type:r.type||"webpage"});if(n!=null&&n.error)throw new Error(n.error);if(!(n!=null&&n.summary))throw new Error("No summary received from AI service");console.log("Summary received:",n.summary.length,"characters"),this.showSummary(n.summary)}catch(s){this.showError("Failed to summarize page: "+s.message)}}async summarizeVideo(){var t,e,s;if((t=this.currentTab)!=null&&t.id)try{if(this.showLoading("Extracting video content..."),!((e=this.currentTab.url)!=null&&e.includes("youtube.com")))throw new Error("Video summarization currently supports YouTube only");const[o]=await chrome.scripting.executeScript({target:{tabId:this.currentTab.id},func:()=>new Promise(m=>{chrome.runtime.sendMessage({action:"extractContent"},a=>{m(a)})})});if(!((s=o==null?void 0:o.result)!=null&&s.success))throw new Error("Failed to extract video content");const i=o.result.content;if(i.type!=="video")throw new Error("No video content detected on this page");this.showLoading("Generating video summary...");const r=i.captions||i.text,n=await chrome.runtime.sendMessage({action:"summarizePage",text:`Video content: ${r}`,url:i.url});if(n!=null&&n.error)throw new Error(n.error);this.showSummary(n.summary)}catch(o){this.showError("Failed to summarize video: "+o.message)}}async openGeminiChat(){var t;if((t=this.currentTab)!=null&&t.id)try{await chrome.scripting.executeScript({target:{tabId:this.currentTab.id},func:()=>{chrome.runtime.sendMessage({action:"showOverlay"})}}),window.close()}catch(e){this.showError("Failed to open chat: "+e.message)}}showLoading(t){this.updateStatus("ready",t),this.enableButtons(!1);const e=document.querySelector(".action-btn:not(:disabled)");e&&e.classList.add("loading"),console.log("GemLens:",t)}showSummary(t){this.summaryContent.textContent=t,this.summaryContainer.style.display="block",this.updateStatus("ready","Summary generated"),this.enableButtons(!0),document.querySelectorAll(".action-btn").forEach(e=>{e.classList.remove("loading")})}showError(t){this.updateStatus("error",t),this.enableButtons(!0),document.querySelectorAll(".action-btn").forEach(e=>{e.classList.remove("loading")})}closeSummary(){this.summaryContainer.style.display="none"}async copySummary(){try{await navigator.clipboard.writeText(this.summaryContent.textContent||"");const t=document.getElementById("copyBtn"),e=t.textContent;t.textContent="Copied!",t.style.background="#34C759",setTimeout(()=>{t.textContent=e,t.style.background="#007AFF"},1e3)}catch(t){console.error("Failed to copy summary:",t)}}async showHistory(){try{this.historyContainer.style.display="block",this.historyContent.innerHTML='<div class="loading">Loading history...</div>';const t=await chrome.runtime.sendMessage({action:"getHistory"});t!=null&&t.history&&t.history.length>0?this.displayHistory(t.history):this.historyContent.innerHTML='<div style="padding: 20px; text-align: center; color: #666;">No summaries yet</div>'}catch{this.historyContent.innerHTML='<div style="padding: 20px; text-align: center; color: #ff3b30;">Failed to load history</div>'}}displayHistory(t){this.historyContent.innerHTML="",t.forEach((e,s)=>{const o=document.createElement("div");o.className="history-item";const i=new Date(e.timestamp).toLocaleDateString(),r=e.summary.substring(0,100)+(e.summary.length>100?"...":"");o.innerHTML=`
        <div class="history-item-title">${e.title}</div>
        <div class="history-item-url">${e.url}</div>
        <div class="history-item-preview">${r}</div>
        <div class="history-item-date">${i}</div>
      `,o.addEventListener("click",()=>{this.showHistoryItem(e)}),this.historyContent.appendChild(o)})}showHistoryItem(t){this.summaryContent.textContent=t.summary,this.summaryContainer.style.display="block",this.historyContainer.style.display="none"}closeHistory(){this.historyContainer.style.display="none"}async saveSummary(){const t=document.getElementById("saveBtn"),e=t.textContent;t.textContent="Saved!",t.style.background="#34C759",setTimeout(()=>{t.textContent=e,t.style.background="#34C759"},1e3)}}document.addEventListener("DOMContentLoaded",()=>{new E});
