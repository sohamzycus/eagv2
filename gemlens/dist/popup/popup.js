var C=Object.defineProperty;var f=(h,t,e)=>t in h?C(h,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):h[t]=e;var u=(h,t,e)=>f(h,typeof t!="symbol"?t+"":t,e);class S{constructor(){u(this,"currentTab",null);u(this,"statusIndicator");u(this,"statusText");u(this,"summaryContainer");u(this,"summaryContent");u(this,"historyContainer");u(this,"historyContent");this.statusIndicator=document.getElementById("statusIndicator"),this.statusText=document.getElementById("statusText"),this.summaryContainer=document.getElementById("summaryContainer"),this.summaryContent=document.getElementById("summaryContent"),this.historyContainer=document.getElementById("historyContainer"),this.historyContent=document.getElementById("historyContent"),this.init()}async init(){await this.getCurrentTab(),await this.checkApiKeyStatus(),this.setupEventListeners()}async getCurrentTab(){try{const[t]=await chrome.tabs.query({active:!0,currentWindow:!0});this.currentTab=t}catch(t){console.error("Failed to get current tab:",t)}}async checkApiKeyStatus(){try{const t=await chrome.runtime.sendMessage({action:"checkApiKey"});t!=null&&t.hasKey?(this.updateStatus("ready","Ready to summarize"),this.enableButtons(!0)):(this.updateStatus("warning","API key required"),this.enableButtons(!1))}catch{this.updateStatus("error","Extension error"),this.enableButtons(!1)}}updateStatus(t,e){const r=this.statusIndicator.querySelector(".status-dot");r.className=`status-dot ${t==="ready"?"":t}`,this.statusText.textContent=e}enableButtons(t){document.querySelectorAll(".action-btn").forEach(r=>{r.disabled=!t})}setupEventListeners(){var t,e,r,i,s,o,n,a,d;(t=document.getElementById("summarizePageBtn"))==null||t.addEventListener("click",()=>{this.summarizePage()}),(e=document.getElementById("summarizeVideoBtn"))==null||e.addEventListener("click",()=>{this.summarizeVideo()}),(r=document.getElementById("askGeminiBtn"))==null||r.addEventListener("click",()=>{this.openGeminiChat()}),(i=document.getElementById("settingsBtn"))==null||i.addEventListener("click",()=>{chrome.runtime.openOptionsPage()}),(s=document.getElementById("closeSummary"))==null||s.addEventListener("click",()=>{this.closeSummary()}),(o=document.getElementById("copyBtn"))==null||o.addEventListener("click",()=>{this.copySummary()}),(n=document.getElementById("historyBtn"))==null||n.addEventListener("click",()=>{this.showHistory()}),(a=document.getElementById("closeHistory"))==null||a.addEventListener("click",()=>{this.closeHistory()}),(d=document.getElementById("saveBtn"))==null||d.addEventListener("click",()=>{this.saveSummary()})}async summarizePage(){var t,e;if((t=this.currentTab)!=null&&t.id)try{this.showLoading("Extracting page content...");const r=new Promise((a,d)=>{setTimeout(()=>d(new Error("Content extraction timed out after 10 seconds")),1e4)}),i=chrome.scripting.executeScript({target:{tabId:this.currentTab.id},func:()=>(()=>{const d=window.location.href,g=document.title;let l="";const c=["article","main",'[role="main"]',".content","#content",".post-content",".entry-content"];for(const m of c){const p=document.querySelector(m);if(p){l=p.textContent||p.innerText||"";break}}if(!l){const m=document.body.cloneNode(!0);["nav","header","footer","aside",".navigation",".nav",".menu",".sidebar",".footer",".header"].forEach(x=>{m.querySelectorAll(x).forEach(v=>v.remove())}),l=m.textContent||m.innerText||""}return l=l.replace(/\s+/g," ").trim(),{text:l,title:g,url:d,type:window.location.hostname.includes("youtube.com")?"video":"webpage"}})()}),[s]=await Promise.race([i,r]);if(!(s!=null&&s.result))throw new Error("Failed to extract page content");const o=s.result;if(console.log("Extracted content length:",o.text.length),console.log("Extracted content preview:",o.text.substring(0,200)+"..."),!o.text||o.text.length<50)throw new Error(`Not enough content extracted (${o.text.length} characters). Try refreshing the page.`);this.showLoading(`Generating summary... (${o.text.length} chars extracted)`);const n=await chrome.runtime.sendMessage({action:"summarizePage",text:o.text,url:o.url,title:o.title||((e=this.currentTab)==null?void 0:e.title)||"Untitled Page",type:o.type||"webpage"});if(n!=null&&n.error)throw new Error(n.error);if(!(n!=null&&n.summary))throw new Error("No summary received from AI service");console.log("Summary received:",n.summary.length,"characters"),this.showSummary(n.summary)}catch(r){this.showError("Failed to summarize page: "+r.message)}}async summarizeVideo(){var t,e,r;if((t=this.currentTab)!=null&&t.id)try{if(this.showLoading("Extracting video content..."),!((e=this.currentTab.url)!=null&&e.includes("youtube.com")))throw new Error("Video summarization currently supports YouTube only");const i=new Promise((d,g)=>{setTimeout(()=>g(new Error("Video content extraction timed out after 15 seconds")),15e3)}),s=chrome.scripting.executeScript({target:{tabId:this.currentTab.id},func:()=>(()=>{const g=window.location.href,l=document.title;let c="";const b=document.querySelector("h1.ytd-video-primary-info-renderer")||document.querySelector("h1.title")||document.querySelector(".watch-main-col h1");b&&(c+="Video Title: "+b.textContent+`

`);const m=document.querySelector("#description")||document.querySelector(".watch-main-col .content")||document.querySelector("ytd-video-secondary-info-renderer");m&&(c+="Description: "+m.textContent+`

`),document.querySelector('[aria-label*="transcript" i], [aria-label*="captions" i]')&&(c+=`Transcript available but requires user interaction to access.

`);const x=document.querySelectorAll("#content-text, .comment-text");if(x.length>0&&(c+=`Top Comments:
`,Array.from(x).slice(0,5).forEach((y,v)=>{var w;c+=`${v+1}. ${(w=y.textContent)==null?void 0:w.trim()}
`})),!c||c.length<100){const y=document.body.cloneNode(!0);["nav","header","footer","aside",".navigation",".sidebar","#chat",".live-chat","script","style"].forEach(w=>{y.querySelectorAll(w).forEach(E=>E.remove())}),c=y.textContent||y.innerText||""}return c=c.replace(/\s+/g," ").trim(),{text:c,title:l,url:g,type:"video"}})()}),[o]=await Promise.race([s,i]);if(!(o!=null&&o.result))throw new Error("Failed to extract video content");const n=o.result;if(console.log("Video content extracted:",n.text.length,"characters"),console.log("Video content preview:",n.text.substring(0,300)+"..."),!n.text||n.text.length<50)throw new Error(`Not enough video content extracted (${n.text.length} characters). Try refreshing the page.`);this.showLoading(`Generating video summary... (${n.text.length} chars extracted)`);const a=await chrome.runtime.sendMessage({action:"summarizePage",text:`YouTube Video Content:
${n.text}`,url:n.url,title:n.title||((r=this.currentTab)==null?void 0:r.title)||"YouTube Video",type:"video"});if(a!=null&&a.error)throw new Error(a.error);if(!(a!=null&&a.summary))throw new Error("No video summary received from AI service");console.log("Video summary received:",a.summary.length,"characters"),this.showSummary(a.summary)}catch(i){this.showError("Failed to summarize video: "+i.message)}}async openGeminiChat(){var t;if((t=this.currentTab)!=null&&t.id)try{this.showLoading("Opening Gemini chat..."),await chrome.scripting.executeScript({target:{tabId:this.currentTab.id},func:()=>{if(document.getElementById("gemlens-overlay"))return;const e=document.createElement("iframe");e.id="gemlens-overlay",e.src=chrome.runtime.getURL("content/overlay/overlay.html"),e.style.cssText=`
            position: fixed;
            top: 20px;
            right: 20px;
            width: 400px;
            height: 600px;
            border: none;
            border-radius: 12px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
            z-index: 10000;
            background: white;
          `,document.body.appendChild(e),e.addEventListener("load",()=>{var i,s;const r={title:document.title,url:window.location.href,text:((i=document.body.textContent)==null?void 0:i.substring(0,2e3))||""};(s=e.contentWindow)==null||s.postMessage({action:"setPageContext",content:r},"*")}),window.addEventListener("message",r=>{r.data.action==="closeOverlay"&&e.remove()})}}),this.updateStatus("ready","Chat opened"),this.enableButtons(!0)}catch(e){this.showError("Failed to open chat: "+e.message)}}showLoading(t){this.updateStatus("ready",t),this.enableButtons(!1);const e=document.querySelector(".action-btn:not(:disabled)");e&&e.classList.add("loading"),console.log("GemLens:",t)}showSummary(t){this.summaryContent.innerHTML=this.formatSummary(t),this.summaryContainer.style.display="block",this.updateStatus("ready","Summary generated"),this.enableButtons(!0),document.querySelectorAll(".action-btn").forEach(e=>{e.classList.remove("loading")})}formatSummary(t){return t.replace(/\*\*(.*?)\*\*/g,"<strong>$1</strong>").replace(/^â€¢ (.+)$/gm,"<li>$1</li>").replace(/(<li>.*<\/li>)/gs,"<ul>$1</ul>").split(`

`).map(e=>e.trim()?`<p>${e.replace(/\n/g,"<br>")}</p>`:"").join("")}showError(t){this.updateStatus("error",t),this.enableButtons(!0),document.querySelectorAll(".action-btn").forEach(e=>{e.classList.remove("loading")})}closeSummary(){this.summaryContainer.style.display="none"}async copySummary(){try{await navigator.clipboard.writeText(this.summaryContent.textContent||"");const t=document.getElementById("copyBtn"),e=t.textContent;t.textContent="Copied!",t.style.background="#34C759",setTimeout(()=>{t.textContent=e,t.style.background="#007AFF"},1e3)}catch(t){console.error("Failed to copy summary:",t)}}async showHistory(){try{this.historyContainer.style.display="block",this.historyContent.innerHTML='<div class="loading">Loading history...</div>';const t=await chrome.runtime.sendMessage({action:"getHistory"});t!=null&&t.history&&t.history.length>0?this.displayHistory(t.history):this.historyContent.innerHTML='<div style="padding: 20px; text-align: center; color: #666;">No summaries yet</div>'}catch{this.historyContent.innerHTML='<div style="padding: 20px; text-align: center; color: #ff3b30;">Failed to load history</div>'}}displayHistory(t){this.historyContent.innerHTML="",t.forEach((e,r)=>{const i=document.createElement("div");i.className="history-item";const s=new Date(e.timestamp).toLocaleDateString(),o=e.summary.substring(0,100)+(e.summary.length>100?"...":"");i.innerHTML=`
        <div class="history-item-title">${e.title}</div>
        <div class="history-item-url">${e.url}</div>
        <div class="history-item-preview">${o}</div>
        <div class="history-item-date">${s}</div>
      `,i.addEventListener("click",()=>{this.showHistoryItem(e)}),this.historyContent.appendChild(i)})}showHistoryItem(t){this.summaryContent.textContent=t.summary,this.summaryContainer.style.display="block",this.historyContainer.style.display="none"}closeHistory(){this.historyContainer.style.display="none"}async saveSummary(){const t=document.getElementById("saveBtn"),e=t.textContent;t.textContent="Saved!",t.style.background="#34C759",setTimeout(()=>{t.textContent=e,t.style.background="#34C759"},1e3)}}document.addEventListener("DOMContentLoaded",()=>{new S});
